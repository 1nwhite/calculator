{"version":3,"sources":["Components/Header/Header.js","Components/Body/Square/Square.js","Helpers/buttonValues.js","Components/Body/Body.js","Helpers/evaluate.js","Helpers/filterOperators.js","App.js","index.js"],"names":["Header","props","className","screenValue","Square","name","onClick","style","value","buttonValues","Body","map","row","item","key","getValue","evaluate","string","arr","split","length","join","i","splice","leftOperand","operator","rightOperand","Number","filterOperators","str","symbol","charAt","lastNumber","operators","slice","App","state","mathString","addOperatorToMathString","isNaN","setState","String","firstPart","lastPart","updatedLastPart","Math","abs","updatedMathString","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f5f2af9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Header(props) {\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__number\">\r\n                <span>{props.screenValue}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React from 'react';\r\n\r\nexport function Square(props) {\r\n\r\n    return (\r\n        <button\r\n            className={props.name}\r\n            onClick={props.onClick}\r\n            style={props.style}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    )\r\n}","export const buttonValues = [\r\n    [\r\n        {\r\n            value: 'AC',\r\n            name: \"body__button grey\"\r\n        },\r\n        {\r\n            value: '+/-',\r\n            name: \"body__button grey\"\r\n        },\r\n        {\r\n            value: '%',\r\n            name: \"body__button grey\"\r\n        },\r\n        {\r\n            value: '÷',\r\n            name: \"body__button orange\"\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            value: '7',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '8',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '9',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '×',\r\n            name: \"body__button orange\"\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            value: '4',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '5',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '6',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '-',\r\n            name: \"body__button orange\"\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            value: '1',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '2',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '3',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '+',\r\n            name: \"body__button orange\"\r\n        },\r\n    ],\r\n    [\r\n        {\r\n            value: '0',\r\n            name: \"body__button zero\"\r\n        },\r\n        {\r\n            value: '.',\r\n            name: \"body__button\"\r\n        },\r\n        {\r\n            value: '=',\r\n            name: \"body__button orange\"\r\n        },\r\n    ]\r\n]","import React from 'react';\r\nimport { Square } from './Square/Square';\r\nimport { buttonValues } from '../../Helpers/buttonValues';\r\n\r\nconst Body = (props) => {\r\n\r\n    const getValue = (value) => {\r\n        return () => {\r\n            props.getValue(value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            {buttonValues.map(row => (\r\n                row.map(item => (\r\n                    < Square\r\n                        key={item.value}\r\n                        value={item.value}\r\n                        name={item.name}\r\n                        onClick={getValue(item.value)}\r\n                    />\r\n                ))\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","const evaluate = string => {\r\n    const arr = string.split(\" \");\r\n    let convertedString = '';\r\n\r\n    if (arr.length < 3) {\r\n        convertedString = arr.join(' ');\r\n        return convertedString;\r\n    } else {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === '%') {\r\n                if (arr[i - 2] === '+' || arr[i - 2] === '-') {\r\n                    arr.splice(i - 1, 3, arr[i - 1] / 100 * arr[i - 3]);\r\n                } else {\r\n                    arr.splice(i - 1, 3, arr[i - 1] / 100);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] === '÷' || arr[i] === '×') {\r\n                switch (arr[i]) {\r\n                    case '÷':\r\n                        arr.splice(i - 1, 3, arr[i - 1] / arr[i + 1]);\r\n                        break;\r\n                    case '×':\r\n                        arr.splice(i - 1, 3, arr[i - 1] * arr[i + 1]);\r\n                        break;\r\n                }\r\n                convertedString = arr.join(' ');\r\n\r\n                return evaluate(convertedString);\r\n            }\r\n        }\r\n\r\n        if (arr.length >= 3) {\r\n            const [leftOperand, operator, rightOperand] = arr;\r\n\r\n            switch (operator) {\r\n                case '+':\r\n                    arr.splice(0, 3, Number(leftOperand) + Number(rightOperand));\r\n                    break;\r\n                case '-':\r\n                    arr.splice(0, 3, Number(leftOperand) - Number(rightOperand));\r\n                    break;\r\n            }\r\n\r\n            convertedString = arr.join(' ');\r\n            return evaluate(convertedString)\r\n\r\n        } else {\r\n            convertedString = arr.join(' ');\r\n            return convertedString;\r\n        }\r\n    };\r\n};\r\n\r\nexport default evaluate;\r\n","const filterOperators = (str) => {\r\n    let symbol = str.charAt(str.length - 2);\r\n    let lastNumber = str.charAt(str.length - 1);\r\n    const operators = [\r\n        '+',\r\n        '-',\r\n        '*',\r\n        '/',\r\n    ]\r\n\r\n    for (let i = 0; i < operators.length; i++) {\r\n        if (operators[i] === symbol && !lastNumber) {\r\n            return str.slice(0, -3)\r\n        }\r\n    }\r\n    return str\r\n}\r\n\r\nexport default filterOperators;","import React from 'react';\nimport './App.sass';\nimport { Header } from './Components/Header/Header';\nimport Body from './Components/Body/Body';\nimport evaluate from './Helpers/evaluate';\nimport filterOperators from './Helpers/filterOperators';\n\n\nclass App extends React.Component {\n  state = {\n    screenValue: '0',\n    operator: '',\n    mathString: ''\n  }\n\n  addOperatorToMathString = (state) => {\n    return { mathString: `${state.mathString} ${state.operator} ` }\n  }\n\n  getValue = (value) => {\n    const { screenValue, operator, mathString } = this.state;\n\n    if (!isNaN(value)) {\n      this.setState({\n        screenValue: screenValue > 0 && !operator || screenValue < 0 && !operator\n          ? screenValue + String(value)\n          : String(value),\n        operator: '',\n        mathString: screenValue > 0 || screenValue < 0\n          ? mathString + String(value)\n          : String(value),\n      });\n    } else {\n      switch (value) {\n        case '=':\n          this.setState({\n            screenValue: mathString ? evaluate(mathString) : screenValue,\n            mathString: mathString ? evaluate(mathString) : screenValue,\n          });\n          break;\n        case 'AC':\n          this.setState({\n            screenValue: '0',\n            operator: '',\n            mathString: '',\n          });\n          break;\n        case '.':\n          this.setState({\n            screenValue: screenValue + String(value),\n            mathString: mathString + String(value),\n          });\n          break;\n        case '+/-':\n          const firstPart = mathString.slice(0, mathString.length - 2);\n          const lastPart = mathString[mathString.length - 1];\n          const updatedLastPart = Number(lastPart) > 0 ? -lastPart : Math.abs(lastPart);\n          const updatedMathString = Number(mathString) > 0 ? -mathString : Math.abs(mathString);\n\n          this.setState({\n            screenValue: Number(screenValue) > 0 ? -screenValue : Math.abs(screenValue),\n            mathString: firstPart ? `${firstPart} ${updatedLastPart}` : `${updatedMathString}`\n          });\n          break;\n        default:\n          this.setState({\n            operator: value,\n            mathString: operator && operator === value\n              ? mathString\n              : `${filterOperators(mathString)} ${value} `\n          });\n          break;\n      };\n    };\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          screenValue={this.state.screenValue}\n        />\n\n        <Body\n          getValue={this.getValue}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.sass';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}